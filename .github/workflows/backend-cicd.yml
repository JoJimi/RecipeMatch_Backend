name: Build & Deploy Backend

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Make Docker Env
        run: |
          touch ./.env
          echo "${{ secrets.DOCKER_ENV }}" > ./.env

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Test with Gradle
        run: ./gradlew test

      - name: Build Docker image
        run: docker build -t jimineutron/recipematch-backend:latest .

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push to DockerHub
        run: docker push jimineutron/recipematch-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
  #    - name: SSH to EC2 and deploy
  #      uses: appleboy/ssh-action@master
  #      with:
  #        host: ${{ secrets.EC2_HOST }}
  #        username: ${{ secrets.EC2_USERNAME }}
  #        key: ${{ secrets.EC2_SSH_KEY }}
  #        script: |
  #          sudo docker
  #          sudo docker rm -f $(sudo docker ps -qa)
  #          sudo docker pull jimineutron/recipematch-backend:latest
  #          sudo docker run -d -p 8080:8080 jimineutron/recipematch-backend:latest

      - name: Notify Slack
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#00FF00'
          SLACK_TITLE: 'Build and Deploy'
          SLACK_TEXT: '✅ **백엔드 배포 성공**
          - Docker 이미지: jimineutron/recipematch-backend:latest'
